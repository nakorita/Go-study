package main

import "fmt"

func main() {
	var a []int        //슬라이스 변수 선언 아무것도 초기화 되지 않은 상태
	a = []int{1, 2, 3} //슬라이스에 리터럴값 지정

	a[1] = 10 //값이 할당되어 메모리가 생겼기 때문에 이렇게 접근 가능

	fmt.Println(a)

	var b []int //nil slice 선언

	if b == nil {
		fmt.Println("용량이", cap(b), "길이가", len(b), " Nil Slice입니다.")
	}
}

// var a []int와 같이 슬라이스를 선언하면
// 배열의 일부분을 가리키는 포인터를 만드는 것.
// 선언만 하고 초기화 하지 않아서
// 슬라이스의 정보만 있는 배열만 생성되고,
// 실질적으로 어떠한 변수가 들어갈 공간(메모리)은 생성 X.
// 근데 다른 자료형은 메모리를 만들고 제로값을 주는데,
// 왜 슬라이스는 만들지 않는가?
// 이유는 슬라이스는 크기를 미리 지정하지 않아서
// 컴퓨터가 어디부터 어디까지 0이나 ""으로 채워야할지 모름.
// 따라서 슬라이스의 초기 값을 지정하지 않고 선언만 하면 Nil slice 됨.
// 이것은 크기도 용량도 없는 상태이다.
